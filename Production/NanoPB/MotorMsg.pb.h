/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9-dev at Sun May 27 03:15:33 2018. */

#ifndef PB_MOTORMSG_PB_H_INCLUDED
#define PB_MOTORMSG_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _MotorMsg_Unit {
    MotorMsg_Unit_UNKNOWN_UNIT = 0,
    MotorMsg_Unit_STRING = 1,
    MotorMsg_Unit_BOOLEAN = 2,
    MotorMsg_Unit_INTEGER = 3,
    MotorMsg_Unit_DOUBLE = 4,
    MotorMsg_Unit_SECOND = 5,
    MotorMsg_Unit_DEGREE = 6,
    MotorMsg_Unit_AMP = 7,
    MotorMsg_Unit_VOLT = 8,
    MotorMsg_Unit_NEWTON = 9,
    MotorMsg_Unit_UHENRY = 10
} MotorMsg_Unit;
#define _MotorMsg_Unit_MIN MotorMsg_Unit_UNKNOWN_UNIT
#define _MotorMsg_Unit_MAX MotorMsg_Unit_UHENRY
#define _MotorMsg_Unit_ARRAYSIZE ((MotorMsg_Unit)(MotorMsg_Unit_UHENRY+1))

typedef enum _MotorMsg_Data_Action {
    MotorMsg_Data_Action_UKNONWN_ACTION = 0,
    MotorMsg_Data_Action_GET = 1,
    MotorMsg_Data_Action_RESULT = 2
} MotorMsg_Data_Action;
#define _MotorMsg_Data_Action_MIN MotorMsg_Data_Action_UKNONWN_ACTION
#define _MotorMsg_Data_Action_MAX MotorMsg_Data_Action_RESULT
#define _MotorMsg_Data_Action_ARRAYSIZE ((MotorMsg_Data_Action)(MotorMsg_Data_Action_RESULT+1))

typedef enum _MotorMsg_Data_Param_Id {
    MotorMsg_Data_Param_Id_UNKNOWN_ID = 0,
    MotorMsg_Data_Param_Id_UUID = 1,
    MotorMsg_Data_Param_Id_VERSION = 2,
    MotorMsg_Data_Param_Id_MFG_DATE_YYYYMMDD = 3,
    MotorMsg_Data_Param_Id_MFG_ID = 4,
    MotorMsg_Data_Param_Id_MODEL_ID = 5,
    MotorMsg_Data_Param_Id_STEP_COUNT = 6,
    MotorMsg_Data_Param_Id_INDUCTANCE = 8,
    MotorMsg_Data_Param_Id_CUR_POS = 12,
    MotorMsg_Data_Param_Id_CUR_AMP = 13,
    MotorMsg_Data_Param_Id_CUR_VOLT = 14
} MotorMsg_Data_Param_Id;
#define _MotorMsg_Data_Param_Id_MIN MotorMsg_Data_Param_Id_UNKNOWN_ID
#define _MotorMsg_Data_Param_Id_MAX MotorMsg_Data_Param_Id_CUR_VOLT
#define _MotorMsg_Data_Param_Id_ARRAYSIZE ((MotorMsg_Data_Param_Id)(MotorMsg_Data_Param_Id_CUR_VOLT+1))

typedef enum _MotorMsg_Cmd_Action {
    MotorMsg_Cmd_Action_UNKNOWN = 0,
    MotorMsg_Cmd_Action_BRAKE = 1,
    MotorMsg_Cmd_Action_FREEWHEEL = 2,
    MotorMsg_Cmd_Action_RUN = 3,
    MotorMsg_Cmd_Action_GOTO_POS = 4
} MotorMsg_Cmd_Action;
#define _MotorMsg_Cmd_Action_MIN MotorMsg_Cmd_Action_UNKNOWN
#define _MotorMsg_Cmd_Action_MAX MotorMsg_Cmd_Action_GOTO_POS
#define _MotorMsg_Cmd_Action_ARRAYSIZE ((MotorMsg_Cmd_Action)(MotorMsg_Cmd_Action_GOTO_POS+1))

typedef enum _MotorMsg_Cmd_Param_Id {
    MotorMsg_Cmd_Param_Id_UNKNOWN_PARAM = 0,
    MotorMsg_Cmd_Param_Id_CLOCKWISE = 1,
    MotorMsg_Cmd_Param_Id_POSITION = 2,
    MotorMsg_Cmd_Param_Id_VELOCITY = 3,
    MotorMsg_Cmd_Param_Id_ACCEL = 4,
    MotorMsg_Cmd_Param_Id_HOLD_TORQUE = 5,
    MotorMsg_Cmd_Param_Id_BREAKAWAY = 6,
    MotorMsg_Cmd_Param_Id_MIN_CURRENT_LIMIT = 7,
    MotorMsg_Cmd_Param_Id_MAX_CURRENT_LIMIT = 8,
    MotorMsg_Cmd_Param_Id_MIN_VOLT_VELOCITY = 9,
    MotorMsg_Cmd_Param_Id_MAX_VOLT_VELOCITY = 10,
    MotorMsg_Cmd_Param_Id_MIN_VOLTAGE_LIMIT = 11,
    MotorMsg_Cmd_Param_Id_MAX_VOLTAGE_LIMIT = 12
} MotorMsg_Cmd_Param_Id;
#define _MotorMsg_Cmd_Param_Id_MIN MotorMsg_Cmd_Param_Id_UNKNOWN_PARAM
#define _MotorMsg_Cmd_Param_Id_MAX MotorMsg_Cmd_Param_Id_MAX_VOLTAGE_LIMIT
#define _MotorMsg_Cmd_Param_Id_ARRAYSIZE ((MotorMsg_Cmd_Param_Id)(MotorMsg_Cmd_Param_Id_MAX_VOLTAGE_LIMIT+1))

/* Struct definitions */
typedef struct _MotorMsg_Cmd {
    MotorMsg_Cmd_Action action;
    pb_callback_t params;
/* @@protoc_insertion_point(struct:MotorMsg_Cmd) */
} MotorMsg_Cmd;

typedef struct _MotorMsg_Cmd_Param {
    MotorMsg_Cmd_Param_Id id;
    double value;
    MotorMsg_Unit unit;
/* @@protoc_insertion_point(struct:MotorMsg_Cmd_Param) */
} MotorMsg_Cmd_Param;

typedef struct _MotorMsg_Data {
    MotorMsg_Data_Action action;
    pb_callback_t params;
/* @@protoc_insertion_point(struct:MotorMsg_Data) */
} MotorMsg_Data;

typedef struct _MotorMsg_Data_Param {
    MotorMsg_Data_Param_Id id;
    double value;
    MotorMsg_Unit unit;
/* @@protoc_insertion_point(struct:MotorMsg_Data_Param) */
} MotorMsg_Data_Param;

typedef struct _MotorMsg {
    char uuid[36];
    pb_size_t which_content;
    union {
        MotorMsg_Data motor_data;
        MotorMsg_Cmd motor_cmd;
    } content;
/* @@protoc_insertion_point(struct:MotorMsg) */
} MotorMsg;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MotorMsg_init_default                    {"", 0, {MotorMsg_Data_init_default}}
#define MotorMsg_Data_init_default               {(MotorMsg_Data_Action)0, {{NULL}, NULL}}
#define MotorMsg_Data_Param_init_default         {(MotorMsg_Data_Param_Id)0, 0, (MotorMsg_Unit)0}
#define MotorMsg_Cmd_init_default                {(MotorMsg_Cmd_Action)0, {{NULL}, NULL}}
#define MotorMsg_Cmd_Param_init_default          {(MotorMsg_Cmd_Param_Id)0, 0, (MotorMsg_Unit)0}
#define MotorMsg_init_zero                       {"", 0, {MotorMsg_Data_init_zero}}
#define MotorMsg_Data_init_zero                  {(MotorMsg_Data_Action)0, {{NULL}, NULL}}
#define MotorMsg_Data_Param_init_zero            {(MotorMsg_Data_Param_Id)0, 0, (MotorMsg_Unit)0}
#define MotorMsg_Cmd_init_zero                   {(MotorMsg_Cmd_Action)0, {{NULL}, NULL}}
#define MotorMsg_Cmd_Param_init_zero             {(MotorMsg_Cmd_Param_Id)0, 0, (MotorMsg_Unit)0}

/* Field tags (for use in manual encoding/decoding) */
#define MotorMsg_Cmd_action_tag                  1
#define MotorMsg_Cmd_params_tag                  2
#define MotorMsg_Cmd_Param_id_tag                1
#define MotorMsg_Cmd_Param_value_tag             2
#define MotorMsg_Cmd_Param_unit_tag              3
#define MotorMsg_Data_action_tag                 1
#define MotorMsg_Data_params_tag                 2
#define MotorMsg_Data_Param_id_tag               1
#define MotorMsg_Data_Param_value_tag            2
#define MotorMsg_Data_Param_unit_tag             3
#define MotorMsg_motor_data_tag                  2
#define MotorMsg_motor_cmd_tag                   3
#define MotorMsg_uuid_tag                        1

/* Struct field encoding specification for nanopb */
extern const pb_field_t MotorMsg_fields[4];
extern const pb_field_t MotorMsg_Data_fields[3];
extern const pb_field_t MotorMsg_Data_Param_fields[4];
extern const pb_field_t MotorMsg_Cmd_fields[3];
extern const pb_field_t MotorMsg_Cmd_Param_fields[4];

/* Maximum encoded size of messages (where known) */
/* MotorMsg_size depends on runtime parameters */
/* MotorMsg_Data_size depends on runtime parameters */
#define MotorMsg_Data_Param_size                 13
/* MotorMsg_Cmd_size depends on runtime parameters */
#define MotorMsg_Cmd_Param_size                  13

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MOTORMSG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
